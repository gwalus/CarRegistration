@page "/check-opinions"
@inject IPersonRepository personRepository;
@inject Sotsera.Blazor.Toaster.IToaster Toaster;

<div class="container">
    <h3>Check opinions</h3>
    <EditForm Model="@registrationNumber" OnValidSubmit="@GetOpinions">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Registration Number</label>
            <InputText class="form-control" id="registrationNumber" @bind-Value="registrationNumber" />
        </div>

        <div class="text-right">
            <button class="btn btn-info mb-5" type="submit">Check number</button>
        </div>
    </EditForm>

    @if (opinions.Count > 0)
    {
        for (int i = 0; i < opinions.Count; i++)
        {
            if (i % 2 == 0)
            {
                <div class="text-left font-italic">
                    <div class="alert alert-info mt-2" role="alert">
                        @opinions[i]
                    </div>
                </div>
            }
            else
            {
                <div class="text-left font-italic">
                    <div class="alert alert-success mt-2" role="alert">
                        @opinions[i]
                    </div>
                </div>
            }

        }
    }
    else
    {
        <div class="text-center font-bold">
            <div class="alert alert-danger mt-2" role="alert">
                Not found!
            </div>
        </div>
    }
</div>

@code {
    private string registrationNumber = string.Empty;
    private IList<string> opinions = new List<string>();

    private async Task GetOpinions()
    {
        if (!string.IsNullOrEmpty(registrationNumber))
        {
            opinions = await personRepository.GetOpinionsForRegistrationNumber(registrationNumber);

            if (opinions.Count == 0)
                Toaster.Error("Number not found.");
        }
        else Toaster.Error("Values cannot be empty.");
    }
}